集合(Collection)
    注：就是一个容器
    1、数组也是一个集合
    2、集合中存储的都是对象的内存地址，集合本身就是一个对象
    3、集合中不能存放基本的数据类型，list.add(100)这里就是自动装箱成Integer
    4、使用不同的集合等同于不同的数据结构
    5、最终是一个Collection接口，继承Iterable,使用迭代器返回一个迭代器对象，
        对象中有三个方法完成遍历，next(),hasNext(),remove()。
Collection集合的继承结构图
            interface  Iterable
                    *
                Collection接口：里面又Iterable返回的对象里面的方法hasNext()\next()\remove()
            *               *
         list接口          set接口

    List :
        ArrayList（线程不安全的，底层是一个数组存储结构）
        LinkedList(底层是双向的链表的存储结构)
        Vector(线程安全的)
    Set  :
        HashSet :底层创建的是一个HashMap
        sortedSet（特点：无序的不可重复的，是可自动排序的）接口下的TreeSet
  注解：  list是有序是因为list集合元素有下标，可以重复的
         set集合是无序的，无序的，是因为元素没有下标

Map集合的继承结构图
                interface     Map
                *            *           *
           HashMap        HashTable        SortedMap接口
         (线程不安全的)   （线程安全的）            *
                              *                TreeMap
                           properties
     sortedSMap接口（特点：无序的不可重复的，集合的Key是可自动排序的）下的TreeMap

Collection的方法
    1、add()
    2、remove()
    3、clear()
    4、toArray()
    5、contain()
    6、isEmpty()
    7、size()
使用迭代器对集合进行遍历
    while 循环加 hasNext方法 和 next方法返回的
深入学习contain方法和remove（迭代器中的）方法
    使用remove的时候要使用迭代器去调用，不然就会报错误。是因为使用集合去移除的时候集合中的元素被移除了，
    参照里的元素还没被移除导致错误
    contain方法是比较的内存地址，即使是同一个字符串在方法区内存中的内存地址是一样的，但是在堆内存中的
    地址是不一样的。
List中特有的方法,ArrayList中的集合初始容量为10
    new ArrayList(20) 可以指定大小，但是没有元素的时候size（）会是0
    get()   由此可见，可以使用此方法对集合进行遍历
    lastIndexOf()
    indexOf()
    add(index,Element)
    第二个构造方法是把Collection集合转换成ArrayList集合的